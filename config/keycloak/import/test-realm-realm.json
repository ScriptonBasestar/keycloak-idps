{
    "id": "8a9920c2-87fd-409b-a571-f32d55d9acdf",
    "realm": "test-realm",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "e48f98a5-43be-4920-b249-60eea1f9c0a0",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "8a9920c2-87fd-409b-a571-f32d55d9acdf",
                "attributes": {}
            },
            {
                "id": "c452085c-9814-4305-9712-c4b93fec7b84",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "8a9920c2-87fd-409b-a571-f32d55d9acdf",
                "attributes": {}
            },
            {
                "id": "06363064-99b2-48b5-a61f-f59544c3fc6c",
                "name": "default-roles-test-realm",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": [
                        "offline_access",
                        "uma_authorization"
                    ],
                    "client": {
                        "account": [
                            "manage-account",
                            "view-profile"
                        ]
                    }
                },
                "clientRole": false,
                "containerId": "8a9920c2-87fd-409b-a571-f32d55d9acdf",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "16daa83c-f008-4702-aee2-2e93f146e544",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "f4b716c2-dc7a-40ae-b444-97210e6f392b",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "8702df55-0b17-4947-8031-2ea743d7a2ec",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "7a40b02c-4889-4607-9c25-916c03461dcf",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "3c157233-e546-468d-b54b-6d736e5bf387",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "a08827de-d8ad-4911-9fe1-12dbaebd956c",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "d51069fe-5785-4f24-b36f-9b3b2b42b225",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "167baaeb-b699-4974-9bef-64f8a2df296e",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "manage-events",
                                "view-identity-providers",
                                "query-users",
                                "manage-users",
                                "manage-realm",
                                "manage-identity-providers",
                                "query-realms",
                                "query-clients",
                                "view-events",
                                "impersonation",
                                "view-clients",
                                "manage-authorization",
                                "view-users",
                                "query-groups",
                                "view-realm",
                                "create-client",
                                "view-authorization",
                                "manage-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "5ae1214b-eb79-4ea2-bda1-98ba1e113d1b",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "20c5e266-2834-430c-b94e-a5529ad89c48",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "2b38eeee-9938-4574-964c-af6da8b42786",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "3db42b15-79c3-4c52-863c-837b5f72a410",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "9c9848ab-08fd-42a0-9630-d3c95bff77c3",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "d61d32b0-fe20-423e-af3a-37b350acc842",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "query-users",
                                "query-groups"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "14125081-6eea-492c-988a-8b5490c54b99",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "d1cd08f8-a909-4084-8efc-ca1faefc8dd4",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "f7806b76-d184-42ea-9021-85ed3255be4b",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "fc6c4488-e0ec-4347-9acb-9e62a8b6aecd",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                },
                {
                    "id": "11631ea7-5936-4912-822d-3f265920f023",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "test-client": [
                {
                    "id": "ec6829cd-a307-4627-a4a6-8f4b75b7d9aa",
                    "name": "uma_protection",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "e701c368-1c1d-41f7-a156-ff13de687839",
                    "attributes": {}
                }
            ],
            "account-console": [],
            "broker": [
                {
                    "id": "e6df2658-94ff-4e0e-9eba-c334e5e30f74",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "6a7ab544-18f2-4f75-aba5-af20981188dc",
                    "attributes": {}
                }
            ],
            "account": [
                {
                    "id": "7adf5311-3ef2-4b1b-a308-7f4fae0aba27",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "manage-account-links"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "5dbe4b8b-8143-4893-a919-d16b5cb7ffac",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": [
                                "view-consent"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "c18c927c-c4df-4d33-88a1-e7d739beac0c",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "2e9a2115-7b30-4ea5-a05e-47d3d2fa6501",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "a647650e-fd4a-41a2-ab64-df420eaa2581",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "0e7f2548-96ce-49cb-9fe4-09153c19976c",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "9921445d-c6d9-49d3-8645-92204f122344",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                },
                {
                    "id": "748f4f40-9680-4b25-95ac-b2dedbf8e374",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "06363064-99b2-48b5-a61f-f59544c3fc6c",
        "name": "default-roles-test-realm",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "8a9920c2-87fd-409b-a571-f32d55d9acdf"
    },
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
        "totpAppMicrosoftAuthenticatorName",
        "totpAppGoogleName",
        "totpAppFreeOTPName"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": [
                "offline_access"
            ]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": [
                    "manage-account",
                    "view-groups"
                ]
            }
        ]
    },
    "clients": [
        {
            "id": "1482c18d-e7d5-453c-8575-04e93ab09bd3",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/test-realm/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/test-realm/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "9183e763-fe7d-4439-8f16-2013046c6642",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/test-realm/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/realms/test-realm/account/*"
            ],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "c11dc556-6419-4211-b3ca-3d3c5f5e5278",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "fab2dd21-a3b3-4224-8791-4945dfb7dd72",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "6a7ab544-18f2-4f75-aba5-af20981188dc",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "94b8d07c-ed3c-472d-b68c-e4db71b605a6",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {},
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "8dbe570f-0a0a-4fd3-9283-5157a7a1c4bd",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/test-realm/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [
                "/admin/test-realm/console/*"
            ],
            "webOrigins": [
                "+"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "ef491165-cc33-4c2a-9076-cabc60854e0f",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ]
        },
        {
            "id": "e701c368-1c1d-41f7-a156-ff13de687839",
            "clientId": "test-client",
            "name": "",
            "description": "",
            "rootUrl": "http://localhost:3000",
            "adminUrl": "http://localhost:3000",
            "baseUrl": "http://localhost:3000",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": true,
            "clientAuthenticatorType": "client-secret",
            "secret": "q1gHYCaW6bRmBNr4XP4XattDhZq2myA4",
            "redirectUris": [
                "http://localhost:3000/oauth/redirect"
            ],
            "webOrigins": [
                "http://localhost:3000"
            ],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": true,
            "authorizationServicesEnabled": true,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
                "oidc.ciba.grant.enabled": "false",
                "oauth2.device.authorization.grant.enabled": "false",
                "client.secret.creation.time": "1684827857",
                "backchannel.logout.session.required": "true",
                "backchannel.logout.revoke.offline.tokens": "false"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "protocolMappers": [
                {
                    "id": "6b83c8aa-e8b0-4154-bd6c-c57f9025c531",
                    "name": "Client ID",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "client_id",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "client_id",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "2cfc8212-18fa-4dc5-bf6f-53d83c3c6260",
                    "name": "Client Host",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientHost",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientHost",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5a35f78e-c849-45e6-aeac-d47f3b3a8151",
                    "name": "Client IP Address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "clientAddress",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "clientAddress",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
            ],
            "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
            ],
            "authorizationSettings": {
                "allowRemoteResourceManagement": true,
                "policyEnforcementMode": "ENFORCING",
                "resources": [
                    {
                        "name": "Default Resource",
                        "type": "urn:test-client:resources:default",
                        "ownerManagedAccess": false,
                        "attributes": {},
                        "_id": "c6e76a17-32b9-4a72-b2b8-4976f665e856",
                        "uris": [
                            "/*"
                        ]
                    }
                ],
                "policies": [
                    {
                        "id": "f4dc6419-baf4-4610-a685-0b37d33b5b2b",
                        "name": "Default Policy",
                        "description": "A policy that grants access only for users within this realm",
                        "type": "js",
                        "logic": "POSITIVE",
                        "decisionStrategy": "AFFIRMATIVE",
                        "config": {
                            "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
                        }
                    },
                    {
                        "id": "1d740b71-a8e3-4e66-965b-7d132c74d91f",
                        "name": "Default Permission",
                        "description": "A permission that applies to the default resource type",
                        "type": "resource",
                        "logic": "POSITIVE",
                        "decisionStrategy": "UNANIMOUS",
                        "config": {
                            "defaultResourceType": "urn:test-client:resources:default",
                            "applyPolicies": "[\"Default Policy\"]"
                        }
                    }
                ],
                "scopes": [],
                "decisionStrategy": "UNANIMOUS"
            }
        }
    ],
    "clientScopes": [
        {
            "id": "ad19c4f6-8ee8-40ca-9c2a-94731cbb5668",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${emailScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "82d349df-7b42-4e21-a763-1b1a38d3983c",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "6f9744cc-1d8f-410c-8366-6b0af211bcd3",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "b49b2f8d-17b3-45b8-9f53-b67f7a4bc516",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "3b56ef0a-86f9-4771-a121-32bb225ae793",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "9c5289f5-7cda-480a-8636-560a07cd6086",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${profileScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "3cef74fb-0969-483c-ac13-f28416506d06",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "d7441cbf-9ba3-4813-b7f8-3b18b1c8a400",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1c000c94-f45c-45e6-bf59-cf5b8195775c",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "34a1c543-b115-4dc1-990d-af50e37637b8",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "4c22fc15-5e06-48b6-99d8-a3ea759a0954",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "caace08f-007b-40aa-b422-ed25cee1123b",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "cfa705e0-b946-4a4b-a209-96f5ff046b7b",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "70889e99-90b9-466b-a5e3-2d74942637cb",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "23b31ae5-e219-49ce-8ef7-72bea54fbb98",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a5d0bfa0-4c95-49ab-b276-d6d1d62a65f1",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "eb634f68-46b6-47b6-a352-52c947b09f67",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5cb7b032-af14-4e03-9e66-c699b010f9ff",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "27d638f2-4bd1-4ab7-ac65-35db143e41b2",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "f59a17e2-253d-4c13-af43-1e78134d3848",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "2def6c95-8c03-4524-953f-ab7d14d567e0",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${rolesScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "7e306bef-59b0-40e8-9356-a05d4b504cc5",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                },
                {
                    "id": "2a7c3691-f6a0-4cb0-9bb3-4994b84ddec0",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "5693b2c5-893a-4482-a9cc-a3175493ac10",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "8b0eb0dc-c894-462d-a6aa-01529b5367ac",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "a789f001-6bf0-4718-b3b7-73b3eac3d2da",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "c1d5d471-8d25-4cd9-b3fa-aeaadd363209",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "4603603a-5676-4765-a691-77b7f52c5816",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false",
                "consent.screen.text": ""
            },
            "protocolMappers": [
                {
                    "id": "abec443b-fec2-4fe5-a228-7528800518ad",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "96c8f6dd-75cd-4597-8b90-3329efd780a8",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "697bddb1-e5dc-4f85-a807-34be6e6fbe52",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "multivalued": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e9986ca7-94e6-4ee1-8b9f-fb3dd6570ee6",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "25cb8405-bcb9-40fa-afc4-fce3ec406417",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${addressScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "04668624-70c1-4bdc-a4b8-8cc7b7a1ddcd",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "69cf4007-8772-41c5-82ef-1fa43a8db888",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true",
                "consent.screen.text": "${phoneScopeConsentText}"
            },
            "protocolMappers": [
                {
                    "id": "e505dc7b-701f-4d78-9fcb-98a9c441c591",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "480f1001-2b65-403e-86ec-b5ccae78d3f6",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr"
    ],
    "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "abb1e6e6-edc2-451d-8ad3-074562452ebe",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-full-name-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-user-property-mapper",
                        "oidc-address-mapper",
                        "saml-role-list-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-attribute-mapper"
                    ]
                }
            },
            {
                "id": "b7c7f161-3f84-4685-9bb9-ba4a453511f6",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "0afc6ae2-0574-47bb-98a7-de0d8f66ffa1",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ]
                }
            },
            {
                "id": "10aa0b1b-903a-4879-af3d-b092fe278929",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "saml-user-property-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "saml-role-list-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "oidc-full-name-mapper"
                    ]
                }
            },
            {
                "id": "1e00b43c-5db1-4f09-9234-0a1d373f27f6",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": [
                        "200"
                    ]
                }
            },
            {
                "id": "a30579b6-5964-486f-b80e-7b8605848f3e",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ]
                }
            },
            {
                "id": "f0fd6153-fcd9-4fbb-afee-5750f30fc4cf",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "4643d9ac-8be8-43f3-a566-f65adc071614",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "ff69e353-821e-4102-8d2f-90e9edd2d0da",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "70ac8f62-4996-4e92-a366-737b4b28e091"
                    ],
                    "secret": [
                        "XpkMIq8EI8wnh0XGmQw6rQ"
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "a640129c-f920-4760-af0b-eac5d6fd218f",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAvY4puCuLflfRsGai65+V7gOaG0ZUPnBbrGsh/J7kUkQ319h3sesk9NLGkIW780JQUoCI44XA5p1Gc2kXNYiK6tmE6yh4iMERJN7ifgC8CueClwWUsvQs9P0N7zyGVqa+sxuP/gpk7LKF2IyInQ+gMFy08dUiSsJNohXCR042RFrF9/5dp+yOxPz7GRZB/x5I3aE9EcIOAmR86DZjzOEhqv1/aqY6Ul822mvt+KisYYyiCmxCxv468HU1NDDCjy4/gxt5ssIX4/vpgSF5+U9H0JVq3e9pDzfwtjSMNm909QDxONv1pmGDRCTkit6SuxgCCzNmED70YM1MMZrNXmpdJQIDAQABAoIBAARC5wtKM1FJlAifaD85WJ/XC7VE/UHwFm1TRrG7ZxP8A58CAu58yfCVDhlw1JVCouKhYY+GaRwr7Ztj9hqQq6rR1je4bMlEb64YBBh6+pCwX2nfpgSLtM/v3D9KGBXFbLBaYAu7ORbLgM/7UqDojcryuGle00rwgHyPp6og+2bgxJ2oFZwi6kuQmhOMSUlGSsM6wL0agLAv2w8lrK4S10/RNIoWxqN9fZNteSufL05BxRPO87/ytwSJjmQEiKGr+gQTXVpEhZty5B6ZCznGuvFylsv2NML7fnBplImgPEbkKeZg+MFWOnqCZlicIAtqL3Zh1rjZxO2eUq/xtejtvJsCgYEA/wsp5Nz8ZcNIgTyE9LbKjgZKGpyIyYsNMYR/4gbuOjJq457lY2nx6uaDFsOC1bIqNnOF2Qv/1LHVc0ov4edtjLxZgPax3ZKfd13aJh7fmpKIGCrHG11F9EPNvIe1/OciLmok8QqAEh1Wo7dGzxDHsXatCkXKjqDtctqdAeqnYrcCgYEAvkQhyX8MlNeoZCG1Gd0KvMO6DjVhlXGVZMoH/2NqtMcDaPPMBekTacIsvTTZYdPaPTDF3upjZdx2Qfvx9rnsVYneWpuv9NHnBXZckISZjbrT9t47pYM1HhXRLuW5/8zG16itK2XiZ/LRa/jUTMLIDhMaKR+Y6sO5eXVQYu/EcwMCgYEAgAmVtZyvZVMdYiwEv2nI1HYZ27Q8A5o4PGS9YraCAFtxR+ZsWHVGitvAcbwjQa7Y/E8Qof8hJyFD/EYBNdLeL2obMOAoOQkz31QRgVO8g7gOdLt9C6LOzKsBbSVgWp+ajFyjQRM5al6qMTSAatGMvu3KPz78SpBFxIQ1kFHCSI8CgYAOlqjEi2JKk1KNAuyg5ArruFIuvrcRv1jGFpuQYG4RGGVRicft+BYN+N53T3MPhi/omzHAytX+PG4w1wGRemX9lQmghulx6xo8l/u29QPVEysndZi7MxlCike0wdaGH4xrgrpsZm56q+qUzcpxbEnsklhiKNMPxRwWjQEx5NJ6QwKBgHaLQzuR8WuVOpkQ+ntWSBTJq5OMcjX/f48frl7iCu7N/0EyZjRBnqqUtWzy3k8jAzRQ2FSHIysvDXp0J//YkRRmOhAWUNQhShPaDhLUvgWreed88ydkp/h04gyXbolPRX0t9wE/bf5aHeAOAE6HtdAgPEEX3BqsUiUQaPbCNKQc"
                    ],
                    "keyUse": [
                        "SIG"
                    ],
                    "certificate": [
                        "MIICozCCAYsCBgGIR4/J6zANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0ZXN0LXJlYWxtMB4XDTIzMDUyMzA3NDEyNVoXDTMzMDUyMzA3NDMwNVowFTETMBEGA1UEAwwKdGVzdC1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL2OKbgri35X0bBmouufle4DmhtGVD5wW6xrIfye5FJEN9fYd7HrJPTSxpCFu/NCUFKAiOOFwOadRnNpFzWIiurZhOsoeIjBESTe4n4AvArngpcFlLL0LPT9De88hlamvrMbj/4KZOyyhdiMiJ0PoDBctPHVIkrCTaIVwkdONkRaxff+XafsjsT8+xkWQf8eSN2hPRHCDgJkfOg2Y8zhIar9f2qmOlJfNtpr7fiorGGMogpsQsb+OvB1NTQwwo8uP4MbebLCF+P76YEheflPR9CVat3vaQ838LY0jDZvdPUA8Tjb9aZhg0Qk5IrekrsYAgszZhA+9GDNTDGazV5qXSUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEANahcIoSBj1ZPkkUl1yok+kJLrhKw+M2l7rP1x3/SVbSYEVExq1uLrC4OepcPb2C53xOaljupUuFKrcaqvZOigSJXFpytRQ+MdBprecTYGmTXliOK4uZ4yknQHGvT2Mvoi3ARMrMnyesPbnHi2Z8AM9tsWr4GU5ouGm6iBDU0eDTpj1JbI5LrVIlpVaeNDMfAQhva1dMLBul6I+qTJ7a6hmg/hDASjJNBriI2K+bG3saCfqaOnLL7KKtDFs1mR43SuIy3Zqzrv+z/A6VL+GeCDL/GxMUGPngX3ocEtQOTlbqc4F3GYsX1gafW6JsNKy8jUYx914eilyIL+pmPmhLpbA=="
                    ],
                    "priority": [
                        "100"
                    ]
                }
            },
            {
                "id": "16d05bed-739c-457b-b0e4-59f764e82356",
                "name": "hmac-generated",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": [
                        "34738c39-320a-4dd6-be00-541137f41554"
                    ],
                    "secret": [
                        "U2rH1ZVQRCex-yKyX0ytkv7honB14vly8BDLnkyE7HikYdM4o5UL7Beo2OiuM10HWJa0zrprMiYVm_x58MKAdg"
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "HS256"
                    ]
                }
            },
            {
                "id": "f7464541-ca1c-464a-8c1b-1dc5d2e44ab5",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEpAIBAAKCAQEA3pa1BZd7P6ACBvm006reAPxd8xqT5faO/45LdyBR5ThoJgLT1NVDe29HIEJvEB9/bCElVISbh7DfBSFTU0GSJrEpMN3HVGsgYnnaME3X1O1N6xqmddQzOuKd6aXOgFgnm8WZKfR6dm3WFhKuLJ5BqwyEBdzbywk08fOvp7UbLkI7tuyJyK0vdSAs09xYDTeCwVoloeBwKrZ1drix52HTHdEMWBwOETPmYsbKr8nnAANYf8YO9d9rGwPNc/M+L1ksa3DCeOlWslxs+7kX64FcBLC+BSje3bIFOlXFSRDEA5/o5b2/xo1jKlUFPYettXh3XaK2rCZEYyjZSdxo29xFFQIDAQABAoIBABF+XrPAeAXuxA9a81nqBTtRROuk8cK9DKK2bY/rO68m2RNDsvT4iIPcTFwTXI8z1TE2Way5efpsGDBbB3rKSHuUqNwXp2F8bzXOGyvOB7cgVLi0MNOfMyI0Spzg/x3Eeo3E4Ii/l3BUqY1f4nh3PPSogyfCzTNj1y681tf4uoN5Y5F31ZubL9cDRh/rwlUhOV/XsR6oBg3XN4dtn8OT2qedpFlt+3a5nqg9g9WgadkZNrhpE80Eu2eb7tHJE/uH5I/9TrP9ViEztNd4ADaZCMdvRHuFN+hswQZ6lpD5hvh9vFx2pL6Rhan4hUI5h3/6M6cMolPj9xdt73DGVpx4ffECgYEA+UFpQhBQ2BSjxXYuxLSUDy6ejVKZXpKiW2BykGb5sIo+vW+xnbwTJFL5xXnjpMKKVg+xkb9AVBCnyop4dAeOpA1cL9X1UbO6YLBbO2WYuzm0HaFu2VHS3cqNm1BGOfP1lqhOQXpFbRUDSD3Rl3RSw8wKcSm5dV+mRhESEmQLnl8CgYEA5JyTTA408DfXIwP82s6e4w1YV2GT1w0uJOPaBNA26xGaEENJyii9WdwJH4/ynGyjGY0uuK+JiANvG+Bn4ZWsLS+qNWWV4J5zW9vs4ydHn6SdRLuECk1ppulW/VPoTBCfzuql1zztKQDuoxVgHZoQHauw2vzo+4LDYHUB5v7I6QsCgYEA6a1iQfZL5JhNBXWL2Qw2dplNOc7DTH+KSMJ+BVUVJ2Yj9bN+QBOvmnFUCsgAHFnqGU7zOWGkrGtE80SoMpdXKgQAdjRPnj4yMC2GCoRwEK7DZrgO1Ry55QbdhUtX20MU7h5x5z77UY3Omu6hzSzX3woui/MDFMAMgUnFuIokvl8CgYARV/+kyX8iqlncAjVwtDRBrYWCO5jnu8xAaDjmHJXOB6vUiAZVG/ohkxvuFRGm5GcLTTa6NDcO5pPLXZ8D8kL5uqADJQ3V2K+PzIOQSC6a4fY8fK1ryqu1SgabeX4qJyi4nfyu86RadAOmw7xjAokudxQXyRAz5JvF+ZqHV9UOOQKBgQCL2dvIezo5Q6Fpab6W+qI25oyTmvary4nrAaMPX8ifCmcYhkVLRU1AiwyhAR7KHc5IWMr2jWRH1vfFom67IuV5+FSpii6q/3d3CrhnFJiueXgz9eDIWKy7xMDpY4zqv+VecAC8aE//7rSjcmHsBjnbBieu8xS7oJ00S48o4Dt6nw=="
                    ],
                    "keyUse": [
                        "ENC"
                    ],
                    "certificate": [
                        "MIICozCCAYsCBgGIR4/KRjANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAp0ZXN0LXJlYWxtMB4XDTIzMDUyMzA3NDEyNVoXDTMzMDUyMzA3NDMwNVowFTETMBEGA1UEAwwKdGVzdC1yZWFsbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN6WtQWXez+gAgb5tNOq3gD8XfMak+X2jv+OS3cgUeU4aCYC09TVQ3tvRyBCbxAff2whJVSEm4ew3wUhU1NBkiaxKTDdx1RrIGJ52jBN19TtTesapnXUMzrinemlzoBYJ5vFmSn0enZt1hYSriyeQasMhAXc28sJNPHzr6e1Gy5CO7bsicitL3UgLNPcWA03gsFaJaHgcCq2dXa4sedh0x3RDFgcDhEz5mLGyq/J5wADWH/GDvXfaxsDzXPzPi9ZLGtwwnjpVrJcbPu5F+uBXASwvgUo3t2yBTpVxUkQxAOf6OW9v8aNYypVBT2HrbV4d12itqwmRGMo2UncaNvcRRUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAaTf9CTPNC08gyfBMN9hWx10iXnRx5WJ7v4TxTnlO0XeoCTv8dZcuHT7mZhTZQUP64fK1z2MDa1rAyceKZRpsW5gcXTiDeXEDtP+osCPcMavd5hlIrbdVpBbi4Z/YoPJm5cgv7LTZzLFBuhLn2CSV0dAfxInOuo6x797rGCvGVBQu82YiUFgje3nKoKVvKbrW3cNPU+SSJgLl5/RMJFO0IJlorw4XzprDbP2W9dHRhgNy4zcDnOHqOiJKGG2ESutKF2P1lob8PKjPgwCAQZL4y9cQzhVfjEMYwp9hRBlfPLwEjBtLZ1sGT+gOYEDVBlO/dQokDXQlrK1bLhZxyYcxxQ=="
                    ],
                    "priority": [
                        "100"
                    ],
                    "algorithm": [
                        "RSA-OAEP"
                    ]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
        {
            "id": "f4c5f832-4d81-4b17-b93f-6d9ff4e369d5",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f76beb68-664b-4e68-bf06-72037b5beabb",
            "alias": "Authentication Options",
            "description": "Authentication options.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "basic-auth",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "basic-auth-otp",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "47ddfcd4-ef7e-402a-a78a-ca31da70253a",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "9b9fda7b-d67d-477d-aefc-e3504fd29968",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "cd8117a8-0e84-4cc7-917e-791174b7af53",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "11070058-cb3b-4a00-a118-eca5729ed578",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "15469dd8-3649-46bc-bb71-d67025f40cb6",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "35af05b2-a05c-43d3-b46e-814ea430f463",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a4935378-c10a-4cc5-a58c-b68e75dfa3ea",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "4f8596f2-31e2-4f4b-a74a-d55bedad0adb",
            "alias": "browser",
            "description": "browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5c32113e-82ea-44be-a3d1-89229ade0ead",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "adb774ce-2d85-4765-b3be-8eab30c178f8",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "85eed3f0-15ee-4ba9-af5d-b03ac647b2d6",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "33434a16-7ef2-4d0d-a4de-4e3ffa5ac23c",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "9eba6d23-0aaf-4af5-854d-c43078cd2556",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1a242045-8d89-4a4e-9f1b-84d6ce51b1c3",
            "alias": "http challenge",
            "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "no-cookie-redirect",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Authentication Options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "17ce978f-3b85-44f5-bed8-520a079b6313",
            "alias": "registration",
            "description": "registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d041041c-3ac0-4d9f-b2e2-5b855c828999",
            "alias": "registration form",
            "description": "registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-profile-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "d8cef946-ce6c-4748-b562-a372aabcd8d6",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "5f9e23c1-9de0-43e0-bca0-a3eaa50ebea1",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "909ada24-67b7-48ac-ad79-fbaff62a945b",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "e69c81c5-738f-4ea2-8f16-278dd14bf0e9",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
        },
        {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "oauth2DevicePollingInterval": "5",
        "parRequestUriLifespan": "60",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "21.1.1",
    "userManagedAccessAllowed": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}
