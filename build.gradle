plugins {
    id 'org.asciidoctor.jvm.convert' apply false

    id 'org.jetbrains.kotlin.jvm' apply false
    id 'org.jetbrains.kotlin.plugin.jpa' apply false
    id 'org.jetbrains.kotlin.plugin.noarg' apply false
    id 'org.jetbrains.kotlin.plugin.allopen' apply false
    id 'org.jetbrains.kotlin.plugin.spring' apply false

    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management' apply false

    id 'com.google.protobuf' apply false

    id 'com.github.johnrengelman.shadow' apply false
    id 'net.nemerosa.versioning' apply false

    id 'org.jlleitschuh.gradle.ktlint' apply false
}

apply plugin: 'base'

allprojects {
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'org.jlleitschuh.gradle.ktlint-idea'

    group = 'org.scriptonbasestar.keycloak.exts'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        ktlintRuleset "com.pinterest.ktlint:ktlint-core:$ktlint_version"
        ktlintRuleset "com.pinterest.ktlint:ktlint-ruleset-standard:$ktlint_version"
    }

    ktlint {
        debug = true
        verbose = true
    }
}

apply plugin: 'base'

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'kotlin'

    dependencies {
//        implementation platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_version")
//        implementation platform("org.jetbrains.kotlinx:kotlinx-coroutines-bom:$kotlin_coroutines_version")
//        implementation platform("org.keycloak.bom:keycloak-adapter-bom:$keycloak_version")
//        implementation platform("org.keycloak.bom:keycloak-misc-bom:$keycloak_version")
//        implementation platform("org.keycloak.bom:keycloak-spi-bom:$keycloak_version")
//        implementation platform("org.apache.groovy:groovy-bom:$groovy_version")

        // kotlin
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlin_coroutines_version"
//        implementation "org.jetbrains.kotlin:kotlin-reflect"
//        implementation "org.jetbrains.kotlin:kotlin-stdlib"
//        implementation "org.jetbrains.kotlin:kotlin-test"
//        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor"

        // groovy
        implementation "org.apache.groovy:groovy:$groovy_version"
        implementation "org.apache.groovy:groovy-json:$groovy_version"
//        implementation "org.apache.groovy:groovy"
//        implementation "org.apache.groovy:groovy-json"

        compileOnly "org.jboss.logging:jboss-logging:$jboss_logging_version"


//        testImplementation('org.springframework.boot:spring-boot-starter-test') {
//            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//            exclude module: 'junit'
//        }
//        testImplementation 'io.projectreactor:reactor-test'
//        testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
//        testImplementation 'org.testcontainers:junit-jupiter'
//        testImplementation 'org.testcontainers:postgresql'
//        testImplementation 'org.testcontainers:rabbitmq'
//        testImplementation "org.testcontainers:spock:1.15.1"
    }

    configurations {
        compileOnly {
            extendsFrom(annotationProcessor)
        }
        bundleLib
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    compileJava {
        options.annotationProcessorPath = configurations.annotationProcessor
    }
    compileKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_17
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
//        kotlinOptions.freeCompilerArgs += '-Xjsr305=strict'
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = JavaVersion.VERSION_17
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
    }
    clean {
        delete 'src/main/generated'
        delete 'build'
    }
}
